[0.000000] (-) TimerEvent: {}
[0.000270] (liftoff_interface) JobQueued: {'identifier': 'liftoff_interface', 'dependencies': OrderedDict([('liftoff_interface', '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_interface')])}
[0.000400] (liftoff_telemetry) JobQueued: {'identifier': 'liftoff_telemetry', 'dependencies': OrderedDict([('liftoff_telemetry', '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_telemetry')])}
[0.000556] (virtual_controller) JobQueued: {'identifier': 'virtual_controller', 'dependencies': OrderedDict([('virtual_controller', '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/virtual_controller')])}
[0.000591] (liftoff_interface) JobStarted: {'identifier': 'liftoff_interface'}
[0.004428] (liftoff_telemetry) JobStarted: {'identifier': 'liftoff_telemetry'}
[0.006399] (virtual_controller) JobStarted: {'identifier': 'virtual_controller'}
[0.099448] (-) TimerEvent: {}
[0.168432] (liftoff_interface) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_interface', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'LANGUAGE': 'en_IL:en', 'USER': 'raz', 'SSH_AGENT_PID': '4101', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/raz', 'OLDPWD': '/home/raz', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '1915', 'SYSTEMD_EXEC_PID': '2245', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4068', 'ROS_DISTRO': 'humble', 'GTK_IM_MODULE': 'ibus', 'LOGNAME': 'raz', 'JOURNAL_STREAM': '8:14685', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'raz', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/raz-lab:@/tmp/.ICE-unix/2218,unix/raz-lab:/tmp/.ICE-unix/2218', 'INVOCATION_ID': 'b5603a7f2d904c0ea41543e30cdd3f63', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/tmp/ssh-XXXXXXNCeHFH/agent.4100', 'AMENT_PREFIX_PATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_interface:/opt/ros/humble', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:84efd674-e9da-431b-bc33-2e134bc5cd0c', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GJS_DEBUG_OUTPUT': 'stderr', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface:/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_interface/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/pytest.xml --junit-prefix=liftoff_interface -o cache_dir=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/.pytest_cache'}, 'shell': False}
[0.199610] (-) TimerEvent: {}
[0.299794] (-) TimerEvent: {}
[0.330282] (liftoff_telemetry) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_telemetry', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'LANGUAGE': 'en_IL:en', 'USER': 'raz', 'SSH_AGENT_PID': '4101', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/raz', 'OLDPWD': '/home/raz', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '1915', 'SYSTEMD_EXEC_PID': '2245', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4068', 'ROS_DISTRO': 'humble', 'GTK_IM_MODULE': 'ibus', 'LOGNAME': 'raz', 'JOURNAL_STREAM': '8:14685', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'raz', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/raz-lab:@/tmp/.ICE-unix/2218,unix/raz-lab:/tmp/.ICE-unix/2218', 'INVOCATION_ID': 'b5603a7f2d904c0ea41543e30cdd3f63', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/tmp/ssh-XXXXXXNCeHFH/agent.4100', 'AMENT_PREFIX_PATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_telemetry:/opt/ros/humble', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:84efd674-e9da-431b-bc33-2e134bc5cd0c', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GJS_DEBUG_OUTPUT': 'stderr', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry:/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_telemetry/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/pytest.xml --junit-prefix=liftoff_telemetry -o cache_dir=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/.pytest_cache'}, 'shell': False}
[0.399880] (-) TimerEvent: {}
[0.436765] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.436901] (liftoff_interface) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.439353] (liftoff_interface) StdoutLine: {'line': b'cachedir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/.pytest_cache\n'}
[0.439436] (liftoff_interface) StdoutLine: {'line': b'rootdir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_interface\n'}
[0.439473] (liftoff_interface) StdoutLine: {'line': b'plugins: launch-testing-1.0.8, ament-xmllint-0.12.12, ament-lint-0.12.12, ament-pep257-0.12.12, ament-flake8-0.12.12, ament-copyright-0.12.12, launch-testing-ros-0.19.9, cov-3.0.0, colcon-core-0.19.0, repeat-0.9.1, rerunfailures-10.2\n'}
[0.489099] (liftoff_interface) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.489239] (liftoff_interface) StdoutLine: {'line': b'collected 0 items / 1 error                                                    \x1b[0m\n'}
[0.489421] (virtual_controller) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/virtual_controller', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'LANGUAGE': 'en_IL:en', 'USER': 'raz', 'SSH_AGENT_PID': '4101', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/raz', 'OLDPWD': '/home/raz', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '1915', 'SYSTEMD_EXEC_PID': '2245', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4068', 'ROS_DISTRO': 'humble', 'GTK_IM_MODULE': 'ibus', 'LOGNAME': 'raz', 'JOURNAL_STREAM': '8:14685', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'raz', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/raz-lab:@/tmp/.ICE-unix/2218,unix/raz-lab:/tmp/.ICE-unix/2218', 'INVOCATION_ID': 'b5603a7f2d904c0ea41543e30cdd3f63', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/tmp/ssh-XXXXXXNCeHFH/agent.4100', 'AMENT_PREFIX_PATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/virtual_controller:/opt/ros/humble', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:84efd674-e9da-431b-bc33-2e134bc5cd0c', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GJS_DEBUG_OUTPUT': 'stderr', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller:/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/virtual_controller/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/pytest.xml --junit-prefix=virtual_controller -o cache_dir=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/.pytest_cache'}, 'shell': False}
[0.499948] (-) TimerEvent: {}
[0.504548] (liftoff_interface) StdoutLine: {'line': b'\n'}
[0.504632] (liftoff_interface) StdoutLine: {'line': b'==================================== ERRORS ====================================\n'}
[0.504679] (liftoff_interface) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________ ERROR collecting test session _________________________\x1b[0m\n'}
[0.504710] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[0.527934] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[0.528237] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[0.528286] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[0.528324] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[0.528361] (liftoff_interface) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[0.528396] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:200: in pytest_collect_file\n'}
[0.528434] (liftoff_interface) StdoutLine: {'line': b'    module: Module = ihook.pytest_pycollect_makemodule(path=path, parent=parent)\n'}
[0.528467] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[0.528502] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[0.528534] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[0.528592] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[0.528687] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[0.528728] (liftoff_interface) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[0.528765] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/opt/ros/humble/lib/python3.10/site-packages/launch_testing/pytest/hooks.py\x1b[0m:193: in pytest_pycollect_makemodule\n'}
[0.528799] (liftoff_interface) StdoutLine: {'line': b'    entrypoint = find_launch_test_entrypoint(path)\n'}
[0.528831] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/opt/ros/humble/lib/python3.10/site-packages/launch_testing/pytest/hooks.py\x1b[0m:186: in find_launch_test_entrypoint\n'}
[0.528859] (liftoff_interface) StdoutLine: {'line': b'    module = path.pyimport()\n'}
[0.528889] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/py/_path/local.py\x1b[0m:704: in pyimport\n'}
[0.528922] (liftoff_interface) StdoutLine: {'line': b'    \x1b[96m__import__\x1b[39;49;00m(modname)\n'}
[0.528952] (liftoff_interface) StdoutLine: {'line': b"\x1b[1m\x1b[31mE   ModuleNotFoundError: No module named 'test_system'\x1b[0m\n"}
[0.528981] (liftoff_interface) StdoutLine: {'line': b'- generated xml file: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/pytest.xml -\n'}
[0.529036] (liftoff_interface) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.529117] (liftoff_interface) StdoutLine: {'line': b"ERROR  - ModuleNotFoundError: No module named 'test_system'\n"}
[0.529150] (liftoff_interface) StdoutLine: {'line': b'!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n'}
[0.529178] (liftoff_interface) StdoutLine: {'line': b'\x1b[31m=============================== \x1b[31m\x1b[1m1 error\x1b[0m\x1b[31m in 0.09s\x1b[0m\x1b[31m ===============================\x1b[0m\n'}
[0.561126] (liftoff_interface) CommandEnded: {'returncode': 2}
[0.561429] (liftoff_interface) JobEnded: {'identifier': 'liftoff_interface', 'rc': 2}
[0.596087] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.596222] (liftoff_telemetry) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.598837] (liftoff_telemetry) StdoutLine: {'line': b'cachedir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/.pytest_cache\n'}
[0.598922] (liftoff_telemetry) StdoutLine: {'line': b'rootdir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_telemetry\n'}
[0.598961] (liftoff_telemetry) StdoutLine: {'line': b'plugins: launch-testing-1.0.8, ament-xmllint-0.12.12, ament-lint-0.12.12, ament-pep257-0.12.12, ament-flake8-0.12.12, ament-copyright-0.12.12, launch-testing-ros-0.19.9, cov-3.0.0, colcon-core-0.19.0, repeat-0.9.1, rerunfailures-10.2\n'}
[0.600018] (-) TimerEvent: {}
[0.639402] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.639535] (liftoff_telemetry) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.639575] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.643065] (liftoff_telemetry) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.700137] (-) TimerEvent: {}
[0.753232] (virtual_controller) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.753370] (virtual_controller) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.755954] (virtual_controller) StdoutLine: {'line': b'cachedir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/.pytest_cache\n'}
[0.756037] (virtual_controller) StdoutLine: {'line': b'rootdir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/virtual_controller\n'}
[0.756075] (virtual_controller) StdoutLine: {'line': b'plugins: launch-testing-1.0.8, ament-xmllint-0.12.12, ament-lint-0.12.12, ament-pep257-0.12.12, ament-flake8-0.12.12, ament-copyright-0.12.12, launch-testing-ros-0.19.9, cov-3.0.0, colcon-core-0.19.0, repeat-0.9.1, rerunfailures-10.2\n'}
[0.762435] (liftoff_telemetry) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[0.776864] (liftoff_telemetry) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.776952] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.776989] (liftoff_telemetry) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.777021] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.777050] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.790722] (virtual_controller) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.790809] (virtual_controller) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.790987] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.794351] (virtual_controller) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.800244] (liftoff_telemetry) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.800324] (-) TimerEvent: {}
[0.800387] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 28 code style errors / warnings:\x1b[0m\n'}
[0.800607] (liftoff_telemetry) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I100 Import statements are in the wrong order. 'import socket' should be before 'from rclpy.node import Node' and in a different group.\x1b[0m\n"}
[0.800675] (liftoff_telemetry) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I201 Missing newline between import groups. 'import socket' is identified as Stdlib and 'from rclpy.node import Node' is identified as Third Party.\x1b[0m\n"}
[0.800712] (liftoff_telemetry) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:5:1: I201 Missing newline between import groups. 'from std_msgs.msg import Float32, Float32MultiArray' is identified as Third Party and 'import struct' is identified as Stdlib.\x1b[0m\n"}
[0.800917] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.800967] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[0.801001] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:21:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801031] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:31:100: E501 line too long (104 > 99 characters)\x1b[0m\n'}
[0.801060] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:40:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801088] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:41:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801114] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:42:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801140] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:47:41: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801166] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:47:100: E501 line too long (104 > 99 characters)\x1b[0m\n'}
[0.801200] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:48:41: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801228] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:52:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.801255] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:53:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801282] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:59:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801308] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:65:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801334] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:71:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801361] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:77:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801388] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:83:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801414] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:89:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801443] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:95:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801470] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:101:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801496] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:108:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801521] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:111:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.801547] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:113:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.801573] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:120:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[0.801600] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:121:11: W292 no newline at end of file\x1b[0m\n'}
[0.801630] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.801667] (liftoff_telemetry) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.801695] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801724] (liftoff_telemetry) StdoutLine: {'line': b"./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I100 Import statements are in the wrong order. 'import socket' should be before 'from rclpy.node import Node' and in a different group.\n"}
[0.801753] (liftoff_telemetry) StdoutLine: {'line': b'import socket\n'}
[0.801781] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.801809] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801835] (liftoff_telemetry) StdoutLine: {'line': b"./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I201 Missing newline between import groups. 'import socket' is identified as Stdlib and 'from rclpy.node import Node' is identified as Third Party.\n"}
[0.801863] (liftoff_telemetry) StdoutLine: {'line': b'import socket\n'}
[0.801891] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.801917] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801943] (liftoff_telemetry) StdoutLine: {'line': b"./liftoff_telemetry/liftoff_telemetry_node.py:5:1: I201 Missing newline between import groups. 'from std_msgs.msg import Float32, Float32MultiArray' is identified as Third Party and 'import struct' is identified as Stdlib.\n"}
[0.801969] (liftoff_telemetry) StdoutLine: {'line': b'from std_msgs.msg import Float32, Float32MultiArray\n'}
[0.801994] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.802019] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802045] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:7:1: E302 expected 2 blank lines, found 1\n'}
[0.802072] (liftoff_telemetry) StdoutLine: {'line': b'class LiftoffTelemetryNode(Node):\n'}
[0.802098] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.802125] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802154] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:8:1: CNL100 Class definition does not have a new line.\n'}
[0.802180] (liftoff_telemetry) StdoutLine: {'line': b'    def __init__(self):\n'}
[0.802206] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.802232] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802258] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:21:32: Q000 Double quotes found but single quotes preferred\n'}
[0.802284] (liftoff_telemetry) StdoutLine: {'line': b'        self.get_logger().info(f"Listening for telemetry data on {self.udp_ip}:{self.udp_port}")\n'}
[0.802310] (liftoff_telemetry) StdoutLine: {'line': b'                               ^\n'}
[0.802336] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802362] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:31:100: E501 line too long (104 > 99 characters)\n'}
[0.802389] (liftoff_telemetry) StdoutLine: {'line': b"        self.battery_percentage_pub = self.create_publisher(Float32, 'telemetry/battery_percentage', 10)\n"}
[0.802416] (liftoff_telemetry) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.802444] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802470] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:40:37: Q000 Double quotes found but single quotes preferred\n'}
[0.802502] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Raw data received: {data}")\n'}
[0.802528] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.802555] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802582] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:41:37: Q000 Double quotes found but single quotes preferred\n'}
[0.802609] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Raw data (hex): {data.hex()}")\n'}
[0.802637] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.802668] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802695] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:42:37: Q000 Double quotes found but single quotes preferred\n'}
[0.802720] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Received data size: {len(data)} bytes")\n'}
[0.802746] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.802774] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802800] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:47:41: Q000 Double quotes found but single quotes preferred\n'}
[0.802826] (liftoff_telemetry) StdoutLine: {'line': b'                self.get_logger().error(f"Unexpected data size: {len(data)} (expected {expected_size})")\n'}
[0.802851] (liftoff_telemetry) StdoutLine: {'line': b'                                        ^\n'}
[0.802878] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802904] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:47:100: E501 line too long (104 > 99 characters)\n'}
[0.802929] (liftoff_telemetry) StdoutLine: {'line': b'                self.get_logger().error(f"Unexpected data size: {len(data)} (expected {expected_size})")\n'}
[0.802954] (liftoff_telemetry) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.802979] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803004] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:48:41: Q000 Double quotes found but single quotes preferred\n'}
[0.803029] (liftoff_telemetry) StdoutLine: {'line': b'                self.get_logger().debug(f"Raw data (hex): {data.hex()}")\n'}
[0.803054] (liftoff_telemetry) StdoutLine: {'line': b'                                        ^\n'}
[0.803082] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803107] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:52:100: E501 line too long (100 > 99 characters)\n'}
[0.803131] (liftoff_telemetry) StdoutLine: {'line': b"            unpacked_data = struct.unpack('=f3f4f3f3f4f2fB4f', data)  # Added '=' to disable padding\n"}
[0.803163] (liftoff_telemetry) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.803189] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803215] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:53:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803241] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Unpacked data: {unpacked_data}")\n'}
[0.803267] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803293] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803318] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:59:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803344] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published timestamp: {timestamp_msg.data}")\n'}
[0.803369] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803395] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803419] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:65:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803445] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published position: {position_msg.data}")\n'}
[0.803471] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803495] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803520] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:71:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803545] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published attitude: {attitude_msg.data}")\n'}
[0.803573] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803598] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803623] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:77:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803650] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published velocity: {velocity_msg.data}")\n'}
[0.803677] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803702] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803729] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:83:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803757] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published gyro: {gyro_msg.data}")\n'}
[0.803784] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803810] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803836] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:89:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803863] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published input: {input_msg.data}")\n'}
[0.803888] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.803914] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.803940] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:95:37: Q000 Double quotes found but single quotes preferred\n'}
[0.803968] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published battery voltage: {battery_voltage_msg.data}")\n'}
[0.804015] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.804040] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804066] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:101:37: Q000 Double quotes found but single quotes preferred\n'}
[0.804091] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published battery percentage: {battery_percentage_msg.data}")\n'}
[0.804119] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.804144] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804169] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:108:37: Q000 Double quotes found but single quotes preferred\n'}
[0.804194] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published motor RPM: {motor_rpm_msg.data}")\n'}
[0.804219] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.804244] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804269] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:111:37: Q000 Double quotes found but single quotes preferred\n'}
[0.804293] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().error(f"Error receiving data: {e}")\n'}
[0.804319] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.804344] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804368] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:113:1: E302 expected 2 blank lines, found 1\n'}
[0.804394] (liftoff_telemetry) StdoutLine: {'line': b'def main(args=None):\n'}
[0.804420] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.804445] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804469] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:120:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.804495] (liftoff_telemetry) StdoutLine: {'line': b"if __name__ == '__main__':\n"}
[0.804521] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.804545] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804570] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:121:11: W292 no newline at end of file\n'}
[0.804595] (liftoff_telemetry) StdoutLine: {'line': b'    main()          ^\n'}
[0.804620] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804647] (liftoff_telemetry) StdoutLine: {'line': b'1     CNL100 Class definition does not have a new line.\n'}
[0.804676] (liftoff_telemetry) StdoutLine: {'line': b'2     E302 expected 2 blank lines, found 1\n'}
[0.804702] (liftoff_telemetry) StdoutLine: {'line': b'1     E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.804728] (liftoff_telemetry) StdoutLine: {'line': b'3     E501 line too long (104 > 99 characters)\n'}
[0.804752] (liftoff_telemetry) StdoutLine: {'line': b"1     I100 Import statements are in the wrong order. 'import socket' should be before 'from rclpy.node import Node' and in a different group.\n"}
[0.804778] (liftoff_telemetry) StdoutLine: {'line': b"2     I201 Missing newline between import groups. 'import socket' is identified as Stdlib and 'from rclpy.node import Node' is identified as Third Party.\n"}
[0.804804] (liftoff_telemetry) StdoutLine: {'line': b'17    Q000 Double quotes found but single quotes preferred\n'}
[0.804831] (liftoff_telemetry) StdoutLine: {'line': b'1     W292 no newline at end of file\n'}
[0.804856] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804882] (liftoff_telemetry) StdoutLine: {'line': b'6 files checked\n'}
[0.804907] (liftoff_telemetry) StdoutLine: {'line': b'28 errors\n'}
[0.804932] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.804957] (liftoff_telemetry) StdoutLine: {'line': b"'C'-type errors: 1\n"}
[0.804981] (liftoff_telemetry) StdoutLine: {'line': b"'E'-type errors: 6\n"}
[0.805006] (liftoff_telemetry) StdoutLine: {'line': b"'I'-type errors: 3\n"}
[0.805033] (liftoff_telemetry) StdoutLine: {'line': b"'Q'-type errors: 17\n"}
[0.805057] (liftoff_telemetry) StdoutLine: {'line': b"'W'-type errors: 1\n"}
[0.805081] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.805107] (liftoff_telemetry) StdoutLine: {'line': b'Checked files:\n'}
[0.805133] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.805157] (liftoff_telemetry) StdoutLine: {'line': b'* ./setup.py\n'}
[0.805182] (liftoff_telemetry) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.805207] (liftoff_telemetry) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.805234] (liftoff_telemetry) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.805259] (liftoff_telemetry) StdoutLine: {'line': b'* ./liftoff_telemetry/__init__.py\n'}
[0.805284] (liftoff_telemetry) StdoutLine: {'line': b'* ./liftoff_telemetry/liftoff_telemetry_node.py\n'}
[0.805309] (liftoff_telemetry) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.805334] (liftoff_telemetry) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805372] (liftoff_telemetry) StdoutLine: {'line': b'option --application-import-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805397] (liftoff_telemetry) StdoutLine: {'line': b'option --application-package-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805423] (liftoff_telemetry) StdoutLine: {'line': b'option --import-order-style: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805449] (liftoff_telemetry) StdoutLine: {'line': b'option --quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805475] (liftoff_telemetry) StdoutLine: {'line': b'option --inline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805501] (liftoff_telemetry) StdoutLine: {'line': b'option --multiline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805526] (liftoff_telemetry) StdoutLine: {'line': b'option --docstring-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.805551] (liftoff_telemetry) StdoutLine: {'line': b'- generated xml file: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/pytest.xml -\n'}
[0.805577] (liftoff_telemetry) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.805602] (liftoff_telemetry) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 28 code style...\n'}
[0.805627] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m1 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.20s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.805660] (liftoff_telemetry) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.805701] (liftoff_telemetry) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.805731] (liftoff_telemetry) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.805759] (liftoff_telemetry) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.805786] (liftoff_telemetry) StderrLine: {'line': b'\n'}
[0.805812] (liftoff_telemetry) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.847205] (liftoff_telemetry) CommandEnded: {'returncode': 1}
[0.847487] (liftoff_telemetry) TestFailure: {'identifier': 'liftoff_telemetry'}
[0.847505] (liftoff_telemetry) JobEnded: {'identifier': 'liftoff_telemetry', 'rc': 0}
[0.900503] (-) TimerEvent: {}
[0.912660] (virtual_controller) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[0.927870] (virtual_controller) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.928036] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.928106] (virtual_controller) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.928170] (virtual_controller) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.928232] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.951421] (virtual_controller) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.951622] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 18 code style errors / warnings:\x1b[0m\n'}
[0.951700] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:3:1: I101 Imported names are in the wrong order. Should be AbsInfo, ecodes, UInput\x1b[0m\n'}
[0.951766] (virtual_controller) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:3:1: I100 Import statements are in the wrong order. 'from evdev import UInput, AbsInfo, ecodes' should be before 'from rclpy.node import Node'\x1b[0m\n"}
[0.951831] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:6:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.951891] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:7:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[0.951950] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952008] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:19:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.952065] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:20:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.952122] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:21:100: E501 line too long (122 > 99 characters)\x1b[0m\n'}
[0.952180] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:22:100: E501 line too long (122 > 99 characters)\x1b[0m\n'}
[0.952237] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:23:100: E501 line too long (125 > 99 characters)\x1b[0m\n'}
[0.952294] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:24:100: E501 line too long (126 > 99 characters)\x1b[0m\n'}
[0.952350] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:25:100: E501 line too long (113 > 99 characters)\x1b[0m\n'}
[0.952407] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:26:100: E501 line too long (113 > 99 characters)\x1b[0m\n'}
[0.952463] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:49:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952530] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:80:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952588] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:98:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.952654] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:105:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[0.952716] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:106:11: W292 no newline at end of file\x1b[0m\n'}
[0.952774] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.952831] (virtual_controller) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.952890] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.952949] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:3:1: I101 Imported names are in the wrong order. Should be AbsInfo, ecodes, UInput\n'}
[0.953007] (virtual_controller) StdoutLine: {'line': b'from evdev import UInput, AbsInfo, ecodes as e\n'}
[0.953066] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.953124] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.953180] (virtual_controller) StdoutLine: {'line': b"./virtual_controller/virtual_controller_node.py:3:1: I100 Import statements are in the wrong order. 'from evdev import UInput, AbsInfo, ecodes' should be before 'from rclpy.node import Node'\n"}
[0.953238] (virtual_controller) StdoutLine: {'line': b'from evdev import UInput, AbsInfo, ecodes as e\n'}
[0.953295] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.953351] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.953408] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:6:1: E302 expected 2 blank lines, found 1\n'}
[0.953475] (virtual_controller) StdoutLine: {'line': b'class VirtualControllerNode(Node):\n'}
[0.953532] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.953589] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.953651] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:7:1: CNL100 Class definition does not have a new line.\n'}
[0.953713] (virtual_controller) StdoutLine: {'line': b'    def __init__(self):\n'}
[0.953869] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.953928] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.953959] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:15:1: W293 blank line contains whitespace\n'}
[0.953989] (virtual_controller) StdoutLine: {'line': b'        \n'}
[0.954018] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.954046] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954074] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:19:100: E501 line too long (121 > 99 characters)\n'}
[0.954103] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_X, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),   # Left joystick X\n'}
[0.954131] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954158] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954185] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:20:100: E501 line too long (121 > 99 characters)\n'}
[0.954212] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_Y, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),   # Left joystick Y\n'}
[0.954239] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954267] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954293] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:21:100: E501 line too long (122 > 99 characters)\n'}
[0.954320] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_RX, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),  # Right joystick X\n'}
[0.954355] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954380] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954406] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:22:100: E501 line too long (122 > 99 characters)\n'}
[0.954434] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_RY, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),  # Right joystick Y\n'}
[0.954460] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954486] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954512] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:23:100: E501 line too long (125 > 99 characters)\n'}
[0.954540] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_Z, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),          # Left trigger\n'}
[0.954567] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954593] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954617] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:24:100: E501 line too long (126 > 99 characters)\n'}
[0.954641] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_RZ, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),         # Right trigger\n'}
[0.954682] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954707] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954733] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:25:100: E501 line too long (113 > 99 characters)\n'}
[0.954758] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_HAT0X, AbsInfo(value=0, min=-1, max=1, fuzz=0, flat=0, resolution=0)),       # D-pad X\n'}
[0.954786] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954814] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954841] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:26:100: E501 line too long (113 > 99 characters)\n'}
[0.954867] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_HAT0Y, AbsInfo(value=0, min=-1, max=1, fuzz=0, flat=0, resolution=0)),       # D-pad Y\n'}
[0.954892] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954917] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.954942] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:49:1: W293 blank line contains whitespace\n'}
[0.954968] (virtual_controller) StdoutLine: {'line': b'        \n'}
[0.954993] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.955019] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955044] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:80:1: W293 blank line contains whitespace\n'}
[0.955070] (virtual_controller) StdoutLine: {'line': b'        \n'}
[0.955096] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.955122] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955148] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:98:1: E302 expected 2 blank lines, found 1\n'}
[0.955176] (virtual_controller) StdoutLine: {'line': b'def main(args=None):\n'}
[0.955201] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.955229] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955254] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:105:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.955280] (virtual_controller) StdoutLine: {'line': b"if __name__ == '__main__':\n"}
[0.955306] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.955333] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955361] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:106:11: W292 no newline at end of file\n'}
[0.955388] (virtual_controller) StdoutLine: {'line': b'    main()          ^\n'}
[0.955414] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955439] (virtual_controller) StdoutLine: {'line': b'1     CNL100 Class definition does not have a new line.\n'}
[0.955465] (virtual_controller) StdoutLine: {'line': b'2     E302 expected 2 blank lines, found 1\n'}
[0.955492] (virtual_controller) StdoutLine: {'line': b'1     E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.955519] (virtual_controller) StdoutLine: {'line': b'8     E501 line too long (121 > 99 characters)\n'}
[0.955545] (virtual_controller) StdoutLine: {'line': b"1     I100 Import statements are in the wrong order. 'from evdev import UInput, AbsInfo, ecodes' should be before 'from rclpy.node import Node'\n"}
[0.955572] (virtual_controller) StdoutLine: {'line': b'1     I101 Imported names are in the wrong order. Should be AbsInfo, ecodes, UInput\n'}
[0.955600] (virtual_controller) StdoutLine: {'line': b'1     W292 no newline at end of file\n'}
[0.955627] (virtual_controller) StdoutLine: {'line': b'3     W293 blank line contains whitespace\n'}
[0.955659] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955686] (virtual_controller) StdoutLine: {'line': b'6 files checked\n'}
[0.955712] (virtual_controller) StdoutLine: {'line': b'18 errors\n'}
[0.955738] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955764] (virtual_controller) StdoutLine: {'line': b"'C'-type errors: 1\n"}
[0.955792] (virtual_controller) StdoutLine: {'line': b"'E'-type errors: 11\n"}
[0.955821] (virtual_controller) StdoutLine: {'line': b"'I'-type errors: 2\n"}
[0.955846] (virtual_controller) StdoutLine: {'line': b"'W'-type errors: 4\n"}
[0.955871] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955896] (virtual_controller) StdoutLine: {'line': b'Checked files:\n'}
[0.955922] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.955949] (virtual_controller) StdoutLine: {'line': b'* ./setup.py\n'}
[0.955975] (virtual_controller) StdoutLine: {'line': b'* ./virtual_controller/__init__.py\n'}
[0.956000] (virtual_controller) StdoutLine: {'line': b'* ./virtual_controller/virtual_controller_node.py\n'}
[0.956028] (virtual_controller) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.956052] (virtual_controller) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.956078] (virtual_controller) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.956103] (virtual_controller) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.956128] (virtual_controller) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956155] (virtual_controller) StdoutLine: {'line': b'option --application-import-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956181] (virtual_controller) StdoutLine: {'line': b'option --application-package-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956206] (virtual_controller) StdoutLine: {'line': b'option --import-order-style: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956232] (virtual_controller) StdoutLine: {'line': b'option --quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956260] (virtual_controller) StdoutLine: {'line': b'option --inline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956286] (virtual_controller) StdoutLine: {'line': b'option --multiline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956311] (virtual_controller) StdoutLine: {'line': b'option --docstring-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.956336] (virtual_controller) StdoutLine: {'line': b'- generated xml file: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/pytest.xml -\n'}
[0.956363] (virtual_controller) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.956388] (virtual_controller) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 18 code style...\n'}
[0.956414] (virtual_controller) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m1 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.20s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.956441] (virtual_controller) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.956480] (virtual_controller) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.956507] (virtual_controller) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.956535] (virtual_controller) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.956561] (virtual_controller) StderrLine: {'line': b'\n'}
[0.956586] (virtual_controller) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.995462] (virtual_controller) CommandEnded: {'returncode': 1}
[0.995762] (virtual_controller) TestFailure: {'identifier': 'virtual_controller'}
[0.995779] (virtual_controller) JobEnded: {'identifier': 'virtual_controller', 'rc': 0}
[1.000726] (-) TimerEvent: {}
[1.005970] (-) EventReactorShutdown: {}
