[0.000000] (-) TimerEvent: {}
[0.000472] (liftoff_interface) JobQueued: {'identifier': 'liftoff_interface', 'dependencies': OrderedDict([('liftoff_interface', '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_interface')])}
[0.000577] (liftoff_telemetry) JobQueued: {'identifier': 'liftoff_telemetry', 'dependencies': OrderedDict([('liftoff_telemetry', '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_telemetry')])}
[0.000604] (virtual_controller) JobQueued: {'identifier': 'virtual_controller', 'dependencies': OrderedDict([('virtual_controller', '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/virtual_controller')])}
[0.000633] (liftoff_interface) JobStarted: {'identifier': 'liftoff_interface'}
[0.004707] (liftoff_telemetry) JobStarted: {'identifier': 'liftoff_telemetry'}
[0.006884] (virtual_controller) JobStarted: {'identifier': 'virtual_controller'}
[0.099881] (-) TimerEvent: {}
[0.165780] (liftoff_interface) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_interface', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'LANGUAGE': 'en_IL:en', 'USER': 'raz', 'SSH_AGENT_PID': '4101', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/raz', 'OLDPWD': '/home/raz', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '1915', 'SYSTEMD_EXEC_PID': '2245', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4068', 'ROS_DISTRO': 'humble', 'GTK_IM_MODULE': 'ibus', 'LOGNAME': 'raz', 'JOURNAL_STREAM': '8:14685', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'raz', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/raz-lab:@/tmp/.ICE-unix/2218,unix/raz-lab:/tmp/.ICE-unix/2218', 'INVOCATION_ID': 'b5603a7f2d904c0ea41543e30cdd3f63', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/tmp/ssh-XXXXXXNCeHFH/agent.4100', 'AMENT_PREFIX_PATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_interface:/opt/ros/humble', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:84efd674-e9da-431b-bc33-2e134bc5cd0c', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GJS_DEBUG_OUTPUT': 'stderr', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface:/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_interface/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/pytest.xml --junit-prefix=liftoff_interface -o cache_dir=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/.pytest_cache'}, 'shell': False}
[0.200034] (-) TimerEvent: {}
[0.300308] (-) TimerEvent: {}
[0.332009] (liftoff_telemetry) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_telemetry', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'LANGUAGE': 'en_IL:en', 'USER': 'raz', 'SSH_AGENT_PID': '4101', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/raz', 'OLDPWD': '/home/raz', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '1915', 'SYSTEMD_EXEC_PID': '2245', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4068', 'ROS_DISTRO': 'humble', 'GTK_IM_MODULE': 'ibus', 'LOGNAME': 'raz', 'JOURNAL_STREAM': '8:14685', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'raz', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/raz-lab:@/tmp/.ICE-unix/2218,unix/raz-lab:/tmp/.ICE-unix/2218', 'INVOCATION_ID': 'b5603a7f2d904c0ea41543e30cdd3f63', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/tmp/ssh-XXXXXXNCeHFH/agent.4100', 'AMENT_PREFIX_PATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_telemetry:/opt/ros/humble', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:84efd674-e9da-431b-bc33-2e134bc5cd0c', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GJS_DEBUG_OUTPUT': 'stderr', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry:/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/liftoff_telemetry/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/pytest.xml --junit-prefix=liftoff_telemetry -o cache_dir=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/.pytest_cache'}, 'shell': False}
[0.400395] (-) TimerEvent: {}
[0.427890] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.428054] (liftoff_interface) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.430619] (liftoff_interface) StdoutLine: {'line': b'cachedir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/.pytest_cache\n'}
[0.430703] (liftoff_interface) StdoutLine: {'line': b'rootdir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_interface\n'}
[0.430741] (liftoff_interface) StdoutLine: {'line': b'plugins: launch-testing-1.0.8, ament-xmllint-0.12.12, ament-lint-0.12.12, ament-pep257-0.12.12, ament-flake8-0.12.12, ament-copyright-0.12.12, launch-testing-ros-0.19.9, cov-3.0.0, colcon-core-0.19.0, repeat-0.9.1, rerunfailures-10.2\n'}
[0.478086] (liftoff_interface) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.478261] (liftoff_interface) StdoutLine: {'line': b'collected 0 items / 1 error                                                    \x1b[0m\n'}
[0.494934] (liftoff_interface) StdoutLine: {'line': b'\n'}
[0.495052] (liftoff_interface) StdoutLine: {'line': b'==================================== ERRORS ====================================\n'}
[0.495130] (liftoff_interface) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________ ERROR collecting test session _________________________\x1b[0m\n'}
[0.495196] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[0.499983] (virtual_controller) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/virtual_controller', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'LANGUAGE': 'en_IL:en', 'USER': 'raz', 'SSH_AGENT_PID': '4101', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/raz', 'OLDPWD': '/home/raz', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '1915', 'SYSTEMD_EXEC_PID': '2245', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4068', 'ROS_DISTRO': 'humble', 'GTK_IM_MODULE': 'ibus', 'LOGNAME': 'raz', 'JOURNAL_STREAM': '8:14685', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'raz', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/raz-lab:@/tmp/.ICE-unix/2218,unix/raz-lab:/tmp/.ICE-unix/2218', 'INVOCATION_ID': 'b5603a7f2d904c0ea41543e30cdd3f63', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/tmp/ssh-XXXXXXNCeHFH/agent.4100', 'AMENT_PREFIX_PATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/virtual_controller:/opt/ros/humble', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:84efd674-e9da-431b-bc33-2e134bc5cd0c', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GJS_DEBUG_OUTPUT': 'stderr', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller:/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/install/virtual_controller/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/pytest.xml --junit-prefix=virtual_controller -o cache_dir=/home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/.pytest_cache'}, 'shell': False}
[0.501142] (-) TimerEvent: {}
[0.517111] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[0.517288] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[0.517363] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[0.517431] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[0.517539] (liftoff_interface) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[0.517603] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:200: in pytest_collect_file\n'}
[0.517666] (liftoff_interface) StdoutLine: {'line': b'    module: Module = ihook.pytest_pycollect_makemodule(path=path, parent=parent)\n'}
[0.517729] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[0.517791] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[0.517855] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[0.517966] (liftoff_interface) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[0.518030] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[0.518112] (liftoff_interface) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[0.518205] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/opt/ros/humble/lib/python3.10/site-packages/launch_testing/pytest/hooks.py\x1b[0m:193: in pytest_pycollect_makemodule\n'}
[0.518266] (liftoff_interface) StdoutLine: {'line': b'    entrypoint = find_launch_test_entrypoint(path)\n'}
[0.518325] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/opt/ros/humble/lib/python3.10/site-packages/launch_testing/pytest/hooks.py\x1b[0m:186: in find_launch_test_entrypoint\n'}
[0.518384] (liftoff_interface) StdoutLine: {'line': b'    module = path.pyimport()\n'}
[0.518442] (liftoff_interface) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/py/_path/local.py\x1b[0m:704: in pyimport\n'}
[0.518500] (liftoff_interface) StdoutLine: {'line': b'    \x1b[96m__import__\x1b[39;49;00m(modname)\n'}
[0.518558] (liftoff_interface) StdoutLine: {'line': b"\x1b[1m\x1b[31mE   ModuleNotFoundError: No module named 'test_system'\x1b[0m\n"}
[0.518615] (liftoff_interface) StdoutLine: {'line': b'- generated xml file: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_interface/pytest.xml -\n'}
[0.518684] (liftoff_interface) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.518742] (liftoff_interface) StdoutLine: {'line': b"ERROR  - ModuleNotFoundError: No module named 'test_system'\n"}
[0.518799] (liftoff_interface) StdoutLine: {'line': b'!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n'}
[0.518857] (liftoff_interface) StdoutLine: {'line': b'\x1b[31m=============================== \x1b[31m\x1b[1m1 error\x1b[0m\x1b[31m in 0.09s\x1b[0m\x1b[31m ===============================\x1b[0m\n'}
[0.549936] (liftoff_interface) CommandEnded: {'returncode': 2}
[0.550370] (liftoff_interface) JobEnded: {'identifier': 'liftoff_interface', 'rc': 2}
[0.593142] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.593269] (liftoff_telemetry) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.595724] (liftoff_telemetry) StdoutLine: {'line': b'cachedir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/.pytest_cache\n'}
[0.595807] (liftoff_telemetry) StdoutLine: {'line': b'rootdir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/liftoff_telemetry\n'}
[0.595843] (liftoff_telemetry) StdoutLine: {'line': b'plugins: launch-testing-1.0.8, ament-xmllint-0.12.12, ament-lint-0.12.12, ament-pep257-0.12.12, ament-flake8-0.12.12, ament-copyright-0.12.12, launch-testing-ros-0.19.9, cov-3.0.0, colcon-core-0.19.0, repeat-0.9.1, rerunfailures-10.2\n'}
[0.601214] (-) TimerEvent: {}
[0.630123] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.630263] (liftoff_telemetry) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.630301] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.633756] (liftoff_telemetry) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.701296] (-) TimerEvent: {}
[0.760526] (liftoff_telemetry) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[0.767527] (virtual_controller) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.767630] (virtual_controller) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.770312] (virtual_controller) StdoutLine: {'line': b'cachedir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/.pytest_cache\n'}
[0.770396] (virtual_controller) StdoutLine: {'line': b'rootdir: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/src/virtual_controller\n'}
[0.770433] (virtual_controller) StdoutLine: {'line': b'plugins: launch-testing-1.0.8, ament-xmllint-0.12.12, ament-lint-0.12.12, ament-pep257-0.12.12, ament-flake8-0.12.12, ament-copyright-0.12.12, launch-testing-ros-0.19.9, cov-3.0.0, colcon-core-0.19.0, repeat-0.9.1, rerunfailures-10.2\n'}
[0.774381] (liftoff_telemetry) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.774465] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.774503] (liftoff_telemetry) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.774535] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.774566] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.797604] (liftoff_telemetry) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.797716] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 28 code style errors / warnings:\x1b[0m\n'}
[0.797761] (liftoff_telemetry) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I100 Import statements are in the wrong order. 'import socket' should be before 'from rclpy.node import Node' and in a different group.\x1b[0m\n"}
[0.797840] (liftoff_telemetry) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I201 Missing newline between import groups. 'import socket' is identified as Stdlib and 'from rclpy.node import Node' is identified as Third Party.\x1b[0m\n"}
[0.797871] (liftoff_telemetry) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:5:1: I201 Missing newline between import groups. 'from std_msgs.msg import Float32, Float32MultiArray' is identified as Third Party and 'import struct' is identified as Stdlib.\x1b[0m\n"}
[0.797901] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.797927] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[0.797954] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:21:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.797981] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:31:100: E501 line too long (104 > 99 characters)\x1b[0m\n'}
[0.798009] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:40:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798034] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:41:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798060] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:42:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798085] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:47:41: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798118] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:47:100: E501 line too long (104 > 99 characters)\x1b[0m\n'}
[0.798148] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:48:41: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798173] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:52:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.798199] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:53:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798224] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:59:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798248] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:65:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798274] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:71:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798298] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:77:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798324] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:83:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798351] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:89:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798380] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:95:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798405] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:101:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798429] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:108:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798454] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:111:37: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[0.798479] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:113:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.798505] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:120:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[0.798532] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./liftoff_telemetry/liftoff_telemetry_node.py:121:11: W292 no newline at end of file\x1b[0m\n'}
[0.798559] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.798585] (liftoff_telemetry) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.798612] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.798639] (liftoff_telemetry) StdoutLine: {'line': b"./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I100 Import statements are in the wrong order. 'import socket' should be before 'from rclpy.node import Node' and in a different group.\n"}
[0.798667] (liftoff_telemetry) StdoutLine: {'line': b'import socket\n'}
[0.798693] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.798719] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.798748] (liftoff_telemetry) StdoutLine: {'line': b"./liftoff_telemetry/liftoff_telemetry_node.py:3:1: I201 Missing newline between import groups. 'import socket' is identified as Stdlib and 'from rclpy.node import Node' is identified as Third Party.\n"}
[0.798776] (liftoff_telemetry) StdoutLine: {'line': b'import socket\n'}
[0.798802] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.798828] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.798853] (liftoff_telemetry) StdoutLine: {'line': b"./liftoff_telemetry/liftoff_telemetry_node.py:5:1: I201 Missing newline between import groups. 'from std_msgs.msg import Float32, Float32MultiArray' is identified as Third Party and 'import struct' is identified as Stdlib.\n"}
[0.798879] (liftoff_telemetry) StdoutLine: {'line': b'from std_msgs.msg import Float32, Float32MultiArray\n'}
[0.798905] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.798930] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.798954] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:7:1: E302 expected 2 blank lines, found 1\n'}
[0.798981] (liftoff_telemetry) StdoutLine: {'line': b'class LiftoffTelemetryNode(Node):\n'}
[0.799007] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.799031] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799057] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:8:1: CNL100 Class definition does not have a new line.\n'}
[0.799083] (liftoff_telemetry) StdoutLine: {'line': b'    def __init__(self):\n'}
[0.799113] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.799141] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799167] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:21:32: Q000 Double quotes found but single quotes preferred\n'}
[0.799199] (liftoff_telemetry) StdoutLine: {'line': b'        self.get_logger().info(f"Listening for telemetry data on {self.udp_ip}:{self.udp_port}")\n'}
[0.799225] (liftoff_telemetry) StdoutLine: {'line': b'                               ^\n'}
[0.799251] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799277] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:31:100: E501 line too long (104 > 99 characters)\n'}
[0.799303] (liftoff_telemetry) StdoutLine: {'line': b"        self.battery_percentage_pub = self.create_publisher(Float32, 'telemetry/battery_percentage', 10)\n"}
[0.799329] (liftoff_telemetry) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.799355] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799380] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:40:37: Q000 Double quotes found but single quotes preferred\n'}
[0.799406] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Raw data received: {data}")\n'}
[0.799432] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.799457] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799483] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:41:37: Q000 Double quotes found but single quotes preferred\n'}
[0.799510] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Raw data (hex): {data.hex()}")\n'}
[0.799535] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.799560] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799587] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:42:37: Q000 Double quotes found but single quotes preferred\n'}
[0.799612] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Received data size: {len(data)} bytes")\n'}
[0.799640] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.799665] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799691] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:47:41: Q000 Double quotes found but single quotes preferred\n'}
[0.799717] (liftoff_telemetry) StdoutLine: {'line': b'                self.get_logger().error(f"Unexpected data size: {len(data)} (expected {expected_size})")\n'}
[0.799742] (liftoff_telemetry) StdoutLine: {'line': b'                                        ^\n'}
[0.799767] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799792] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:47:100: E501 line too long (104 > 99 characters)\n'}
[0.799816] (liftoff_telemetry) StdoutLine: {'line': b'                self.get_logger().error(f"Unexpected data size: {len(data)} (expected {expected_size})")\n'}
[0.799841] (liftoff_telemetry) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.799866] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799890] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:48:41: Q000 Double quotes found but single quotes preferred\n'}
[0.799915] (liftoff_telemetry) StdoutLine: {'line': b'                self.get_logger().debug(f"Raw data (hex): {data.hex()}")\n'}
[0.799941] (liftoff_telemetry) StdoutLine: {'line': b'                                        ^\n'}
[0.799966] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.799990] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:52:100: E501 line too long (100 > 99 characters)\n'}
[0.800015] (liftoff_telemetry) StdoutLine: {'line': b"            unpacked_data = struct.unpack('=f3f4f3f3f4f2fB4f', data)  # Added '=' to disable padding\n"}
[0.800045] (liftoff_telemetry) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.800089] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800118] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:53:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800143] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Unpacked data: {unpacked_data}")\n'}
[0.800168] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800193] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800218] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:59:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800243] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published timestamp: {timestamp_msg.data}")\n'}
[0.800268] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800292] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800318] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:65:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800342] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published position: {position_msg.data}")\n'}
[0.800367] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800391] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800415] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:71:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800440] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published attitude: {attitude_msg.data}")\n'}
[0.800465] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800489] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800514] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:77:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800538] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published velocity: {velocity_msg.data}")\n'}
[0.800563] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800587] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800611] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:83:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800636] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published gyro: {gyro_msg.data}")\n'}
[0.800661] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800685] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800710] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:89:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800736] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published input: {input_msg.data}")\n'}
[0.800762] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800788] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800813] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:95:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800838] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published battery voltage: {battery_voltage_msg.data}")\n'}
[0.800863] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800887] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.800911] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:101:37: Q000 Double quotes found but single quotes preferred\n'}
[0.800935] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published battery percentage: {battery_percentage_msg.data}")\n'}
[0.800962] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.800988] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801012] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:108:37: Q000 Double quotes found but single quotes preferred\n'}
[0.801036] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().debug(f"Published motor RPM: {motor_rpm_msg.data}")\n'}
[0.801061] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.801086] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801113] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:111:37: Q000 Double quotes found but single quotes preferred\n'}
[0.801139] (liftoff_telemetry) StdoutLine: {'line': b'            self.get_logger().error(f"Error receiving data: {e}")\n'}
[0.801164] (liftoff_telemetry) StdoutLine: {'line': b'                                    ^\n'}
[0.801188] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801211] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:113:1: E302 expected 2 blank lines, found 1\n'}
[0.801236] (liftoff_telemetry) StdoutLine: {'line': b'def main(args=None):\n'}
[0.801261] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.801285] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801309] (-) TimerEvent: {}
[0.801376] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:120:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.801412] (liftoff_telemetry) StdoutLine: {'line': b"if __name__ == '__main__':\n"}
[0.801440] (liftoff_telemetry) StdoutLine: {'line': b'^\n'}
[0.801468] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801495] (liftoff_telemetry) StdoutLine: {'line': b'./liftoff_telemetry/liftoff_telemetry_node.py:121:11: W292 no newline at end of file\n'}
[0.801521] (liftoff_telemetry) StdoutLine: {'line': b'    main()          ^\n'}
[0.801546] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801571] (liftoff_telemetry) StdoutLine: {'line': b'1     CNL100 Class definition does not have a new line.\n'}
[0.801597] (liftoff_telemetry) StdoutLine: {'line': b'2     E302 expected 2 blank lines, found 1\n'}
[0.801622] (liftoff_telemetry) StdoutLine: {'line': b'1     E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.801648] (liftoff_telemetry) StdoutLine: {'line': b'3     E501 line too long (104 > 99 characters)\n'}
[0.801673] (liftoff_telemetry) StdoutLine: {'line': b"1     I100 Import statements are in the wrong order. 'import socket' should be before 'from rclpy.node import Node' and in a different group.\n"}
[0.801699] (liftoff_telemetry) StdoutLine: {'line': b"2     I201 Missing newline between import groups. 'import socket' is identified as Stdlib and 'from rclpy.node import Node' is identified as Third Party.\n"}
[0.801725] (liftoff_telemetry) StdoutLine: {'line': b'17    Q000 Double quotes found but single quotes preferred\n'}
[0.801750] (liftoff_telemetry) StdoutLine: {'line': b'1     W292 no newline at end of file\n'}
[0.801776] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801801] (liftoff_telemetry) StdoutLine: {'line': b'6 files checked\n'}
[0.801825] (liftoff_telemetry) StdoutLine: {'line': b'28 errors\n'}
[0.801849] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.801874] (liftoff_telemetry) StdoutLine: {'line': b"'C'-type errors: 1\n"}
[0.801898] (liftoff_telemetry) StdoutLine: {'line': b"'E'-type errors: 6\n"}
[0.801923] (liftoff_telemetry) StdoutLine: {'line': b"'I'-type errors: 3\n"}
[0.801947] (liftoff_telemetry) StdoutLine: {'line': b"'Q'-type errors: 17\n"}
[0.801972] (liftoff_telemetry) StdoutLine: {'line': b"'W'-type errors: 1\n"}
[0.801996] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802021] (liftoff_telemetry) StdoutLine: {'line': b'Checked files:\n'}
[0.802047] (liftoff_telemetry) StdoutLine: {'line': b'\n'}
[0.802071] (liftoff_telemetry) StdoutLine: {'line': b'* ./setup.py\n'}
[0.802097] (liftoff_telemetry) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.802127] (liftoff_telemetry) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.802152] (liftoff_telemetry) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.802179] (liftoff_telemetry) StdoutLine: {'line': b'* ./liftoff_telemetry/__init__.py\n'}
[0.802204] (liftoff_telemetry) StdoutLine: {'line': b'* ./liftoff_telemetry/liftoff_telemetry_node.py\n'}
[0.802230] (liftoff_telemetry) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.802255] (liftoff_telemetry) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802285] (liftoff_telemetry) StdoutLine: {'line': b'option --application-import-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802312] (liftoff_telemetry) StdoutLine: {'line': b'option --application-package-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802337] (liftoff_telemetry) StdoutLine: {'line': b'option --import-order-style: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802364] (liftoff_telemetry) StdoutLine: {'line': b'option --quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802389] (liftoff_telemetry) StdoutLine: {'line': b'option --inline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802414] (liftoff_telemetry) StdoutLine: {'line': b'option --multiline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802439] (liftoff_telemetry) StdoutLine: {'line': b'option --docstring-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.802464] (liftoff_telemetry) StdoutLine: {'line': b'- generated xml file: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/liftoff_telemetry/pytest.xml -\n'}
[0.802491] (liftoff_telemetry) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.802516] (liftoff_telemetry) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 28 code style...\n'}
[0.802541] (liftoff_telemetry) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m1 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.20s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.802567] (liftoff_telemetry) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.802608] (liftoff_telemetry) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.802636] (liftoff_telemetry) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.802662] (liftoff_telemetry) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.802688] (liftoff_telemetry) StderrLine: {'line': b'\n'}
[0.802712] (liftoff_telemetry) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.804758] (virtual_controller) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.804848] (virtual_controller) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.804883] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.808394] (virtual_controller) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.839788] (liftoff_telemetry) CommandEnded: {'returncode': 1}
[0.840056] (liftoff_telemetry) TestFailure: {'identifier': 'liftoff_telemetry'}
[0.840075] (liftoff_telemetry) JobEnded: {'identifier': 'liftoff_telemetry', 'rc': 0}
[0.901410] (-) TimerEvent: {}
[0.926244] (virtual_controller) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[0.940879] (virtual_controller) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.940986] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.941024] (virtual_controller) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.941056] (virtual_controller) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.941084] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.964159] (virtual_controller) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.964237] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 18 code style errors / warnings:\x1b[0m\n'}
[0.964539] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:3:1: I101 Imported names are in the wrong order. Should be AbsInfo, ecodes, UInput\x1b[0m\n'}
[0.964570] (virtual_controller) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:3:1: I100 Import statements are in the wrong order. 'from evdev import UInput, AbsInfo, ecodes' should be before 'from rclpy.node import Node'\x1b[0m\n"}
[0.964606] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:6:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.964636] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:7:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[0.964665] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.964692] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:19:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.964759] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:20:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.964787] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:21:100: E501 line too long (122 > 99 characters)\x1b[0m\n'}
[0.964812] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:22:100: E501 line too long (122 > 99 characters)\x1b[0m\n'}
[0.964838] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:23:100: E501 line too long (125 > 99 characters)\x1b[0m\n'}
[0.964863] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:24:100: E501 line too long (126 > 99 characters)\x1b[0m\n'}
[0.964889] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:25:100: E501 line too long (113 > 99 characters)\x1b[0m\n'}
[0.964914] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:26:100: E501 line too long (113 > 99 characters)\x1b[0m\n'}
[0.964939] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:49:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.964971] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:80:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.964996] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:98:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.965023] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:105:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[0.965049] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./virtual_controller/virtual_controller_node.py:106:11: W292 no newline at end of file\x1b[0m\n'}
[0.965075] (virtual_controller) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.965105] (virtual_controller) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.965140] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965168] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:3:1: I101 Imported names are in the wrong order. Should be AbsInfo, ecodes, UInput\n'}
[0.965197] (virtual_controller) StdoutLine: {'line': b'from evdev import UInput, AbsInfo, ecodes as e\n'}
[0.965223] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.965249] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965275] (virtual_controller) StdoutLine: {'line': b"./virtual_controller/virtual_controller_node.py:3:1: I100 Import statements are in the wrong order. 'from evdev import UInput, AbsInfo, ecodes' should be before 'from rclpy.node import Node'\n"}
[0.965302] (virtual_controller) StdoutLine: {'line': b'from evdev import UInput, AbsInfo, ecodes as e\n'}
[0.965328] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.965353] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965379] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:6:1: E302 expected 2 blank lines, found 1\n'}
[0.965411] (virtual_controller) StdoutLine: {'line': b'class VirtualControllerNode(Node):\n'}
[0.965437] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.965462] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965486] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:7:1: CNL100 Class definition does not have a new line.\n'}
[0.965511] (virtual_controller) StdoutLine: {'line': b'    def __init__(self):\n'}
[0.965536] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.965565] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965591] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:15:1: W293 blank line contains whitespace\n'}
[0.965617] (virtual_controller) StdoutLine: {'line': b'        \n'}
[0.965642] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.965668] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965693] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:19:100: E501 line too long (121 > 99 characters)\n'}
[0.965718] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_X, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),   # Left joystick X\n'}
[0.965744] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.965769] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965793] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:20:100: E501 line too long (121 > 99 characters)\n'}
[0.965817] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_Y, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),   # Left joystick Y\n'}
[0.965842] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.965867] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965891] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:21:100: E501 line too long (122 > 99 characters)\n'}
[0.965916] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_RX, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),  # Right joystick X\n'}
[0.965943] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.965968] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.965994] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:22:100: E501 line too long (122 > 99 characters)\n'}
[0.966019] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_RY, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),  # Right joystick Y\n'}
[0.966045] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.966070] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966099] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:23:100: E501 line too long (125 > 99 characters)\n'}
[0.966126] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_Z, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),          # Left trigger\n'}
[0.966151] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.966175] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966199] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:24:100: E501 line too long (126 > 99 characters)\n'}
[0.966225] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_RZ, AbsInfo(value=0, min=-32768, max=32767, fuzz=0, flat=0, resolution=0)),         # Right trigger\n'}
[0.966250] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.966274] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966301] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:25:100: E501 line too long (113 > 99 characters)\n'}
[0.966325] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_HAT0X, AbsInfo(value=0, min=-1, max=1, fuzz=0, flat=0, resolution=0)),       # D-pad X\n'}
[0.966352] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.966381] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966407] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:26:100: E501 line too long (113 > 99 characters)\n'}
[0.966433] (virtual_controller) StdoutLine: {'line': b'                    (e.ABS_HAT0Y, AbsInfo(value=0, min=-1, max=1, fuzz=0, flat=0, resolution=0)),       # D-pad Y\n'}
[0.966457] (virtual_controller) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.966482] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966507] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:49:1: W293 blank line contains whitespace\n'}
[0.966532] (virtual_controller) StdoutLine: {'line': b'        \n'}
[0.966557] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.966581] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966606] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:80:1: W293 blank line contains whitespace\n'}
[0.966630] (virtual_controller) StdoutLine: {'line': b'        \n'}
[0.966655] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.966680] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966705] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:98:1: E302 expected 2 blank lines, found 1\n'}
[0.966730] (virtual_controller) StdoutLine: {'line': b'def main(args=None):\n'}
[0.966755] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.966782] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966808] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:105:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.966834] (virtual_controller) StdoutLine: {'line': b"if __name__ == '__main__':\n"}
[0.966859] (virtual_controller) StdoutLine: {'line': b'^\n'}
[0.966884] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966908] (virtual_controller) StdoutLine: {'line': b'./virtual_controller/virtual_controller_node.py:106:11: W292 no newline at end of file\n'}
[0.966933] (virtual_controller) StdoutLine: {'line': b'    main()          ^\n'}
[0.966958] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.966982] (virtual_controller) StdoutLine: {'line': b'1     CNL100 Class definition does not have a new line.\n'}
[0.967006] (virtual_controller) StdoutLine: {'line': b'2     E302 expected 2 blank lines, found 1\n'}
[0.967032] (virtual_controller) StdoutLine: {'line': b'1     E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.967056] (virtual_controller) StdoutLine: {'line': b'8     E501 line too long (121 > 99 characters)\n'}
[0.967080] (virtual_controller) StdoutLine: {'line': b"1     I100 Import statements are in the wrong order. 'from evdev import UInput, AbsInfo, ecodes' should be before 'from rclpy.node import Node'\n"}
[0.967109] (virtual_controller) StdoutLine: {'line': b'1     I101 Imported names are in the wrong order. Should be AbsInfo, ecodes, UInput\n'}
[0.967134] (virtual_controller) StdoutLine: {'line': b'1     W292 no newline at end of file\n'}
[0.967160] (virtual_controller) StdoutLine: {'line': b'3     W293 blank line contains whitespace\n'}
[0.967185] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.967210] (virtual_controller) StdoutLine: {'line': b'6 files checked\n'}
[0.967235] (virtual_controller) StdoutLine: {'line': b'18 errors\n'}
[0.967260] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.967283] (virtual_controller) StdoutLine: {'line': b"'C'-type errors: 1\n"}
[0.967308] (virtual_controller) StdoutLine: {'line': b"'E'-type errors: 11\n"}
[0.967338] (virtual_controller) StdoutLine: {'line': b"'I'-type errors: 2\n"}
[0.967366] (virtual_controller) StdoutLine: {'line': b"'W'-type errors: 4\n"}
[0.967392] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.967417] (virtual_controller) StdoutLine: {'line': b'Checked files:\n'}
[0.967443] (virtual_controller) StdoutLine: {'line': b'\n'}
[0.967467] (virtual_controller) StdoutLine: {'line': b'* ./setup.py\n'}
[0.967492] (virtual_controller) StdoutLine: {'line': b'* ./virtual_controller/__init__.py\n'}
[0.967516] (virtual_controller) StdoutLine: {'line': b'* ./virtual_controller/virtual_controller_node.py\n'}
[0.967541] (virtual_controller) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.967566] (virtual_controller) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.967592] (virtual_controller) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.967617] (virtual_controller) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.967643] (virtual_controller) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967669] (virtual_controller) StdoutLine: {'line': b'option --application-import-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967694] (virtual_controller) StdoutLine: {'line': b'option --application-package-names: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967720] (virtual_controller) StdoutLine: {'line': b'option --import-order-style: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967746] (virtual_controller) StdoutLine: {'line': b'option --quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967773] (virtual_controller) StdoutLine: {'line': b'option --inline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967798] (virtual_controller) StdoutLine: {'line': b'option --multiline-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967824] (virtual_controller) StdoutLine: {'line': b'option --docstring-quotes: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.967849] (virtual_controller) StdoutLine: {'line': b'- generated xml file: /home/raz/tehiru/Tehiru-Homework-assignment/drone_ws/build/virtual_controller/pytest.xml -\n'}
[0.967874] (virtual_controller) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.967899] (virtual_controller) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 18 code style...\n'}
[0.967924] (virtual_controller) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m1 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.20s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.967951] (virtual_controller) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.967987] (virtual_controller) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.968014] (virtual_controller) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.968042] (virtual_controller) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.968068] (virtual_controller) StderrLine: {'line': b'\n'}
[0.968095] (virtual_controller) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.001535] (-) TimerEvent: {}
[1.009041] (virtual_controller) CommandEnded: {'returncode': 1}
[1.009320] (virtual_controller) TestFailure: {'identifier': 'virtual_controller'}
[1.009338] (virtual_controller) JobEnded: {'identifier': 'virtual_controller', 'rc': 0}
[1.019588] (-) EventReactorShutdown: {}
